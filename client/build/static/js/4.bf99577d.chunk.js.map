{"version":3,"sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","utils/common-utils.js","components/chat/menu/Conversation.jsx","constants/data.js","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"names":["ImageContainer","styled","Box","Image","width","height","borderRadius","padding","BoxWrapper","DescriptionContainer","Profile","account","useContext","AccountContext","_jsxs","_Fragment","children","_jsx","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","InfoDrawer","_ref","open","setOpen","profile","Drawer","onClose","handleClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","googleLogout","HeaderMenu","useState","openDrawer","setOpenDrawer","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","setPerson","UserContext","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Wrapper","MessageIcon","Icon","InputField","InputBase","Search","setText","SearchIcon","fontSize","placeholder","inputProps","onChange","e","target","value","getConversation","async","axios","post","users","data","error","console","log","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","Conversation","_message$text","user","url","newMessageFlag","message","setMessage","useEffect","senderId","sub","receiverId","text","timestamp","updatedAt","getConversationMessage","getUser","setConversation","includes","StyledDivider","Divider","Conversations","setUsers","socket","setActiveUsers","fiteredData","get","getUsers","filter","toLowerCase","fetchData","current","emit","on","map","index","length","Name","RightContainer","Status","ChatHeader","person","activeUsers","find","Own","Time","TextMessage","_ref2","createdAt","ImageMessage","_ref3","position","display","split","pop","bottom","right","GetAppIcon","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","href","duplicateName","download","body","appendChild","click","revokeObjectURL","catch","downloadMedia","marginRight","border","Message","type","ClipIcon","AttachFile","Footer","sendText","setValue","setFile","file","setImage","FormData","append","response","uploadFile","getImage","EmojiEmotions","htmlFor","id","files","onFileChange","onKeyPress","Mic","Messages","_conversation$members2","conversation","messages","setMessages","incomingMessage","setIncomingMessage","image","scrollRef","useRef","setNewMessageFlag","now","getMessages","_id","getMessageDetails","_scrollRef$current","scrollIntoView","transition","_conversation$members","members","prev","member","ref","code","keyCode","which","conversationId","newMessages","ChatBox","getConversationDetails","marginTop","Title","SubTitle","EmptyChat","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","ChatDialog","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","LoginDialog","showloginButton","ListItem","transform","GoogleLogin","buttonText","onSuccess","decoded","jwt_decode","res","credential","addUser","onError","AppBar","LoginHeader","Messenger","Toolbar"],"mappings":"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","file":"static/js/4.bf99577d.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { Box, styled, Typography } from \"@mui/material\"\n\nimport { AccountContext } from \"../../context/AccountProvider\";\n\nconst ImageContainer = styled(Box)`\n    display: flex;\n    justify-content: center;\n`;\n\nconst Image = styled('img') ({\n    width: 200,\n    height: 200,\n    borderRadius: '50%',\n    padding: '25px 0'\n});\n\nconst BoxWrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 12px 30px 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\n    & :first-child {\n        font-size: 13px;\n        color: #009688;\n        font-weight: 200;\n    };\n    & :last-child {\n        margin: 14px 0;\n        color: #4A4A4A;\n    }\n`;\n\nconst DescriptionContainer = styled(Box)`\n    padding: 15px 20px 28px 30px;\n    & > p {\n        color: #8696a0;\n        font-size: 13px;\n    }\n`;\n\nconst Profile = () => {\n\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n            <ImageContainer>\n                <Image src={account.picture} alt=\"displaypicture\" />\n            </ImageContainer>\n            <BoxWrapper>\n                <Typography>Your name</Typography>\n                <Typography>{account.name}</Typography>\n            </BoxWrapper>\n            <DescriptionContainer>\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\n            </DescriptionContainer>\n            <BoxWrapper>\n                <Typography>About</Typography>\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\n            </BoxWrapper>\n        </>\n    )\n}\n\nexport default Profile;","import { styled, Drawer, Box, Typography } from '@mui/material';\nimport { ArrowBack } from '@mui/icons-material';\n\n//components\nimport Profile from './Profile';\n\nconst Header = styled(Box)`\n  background: #008069;\n  height: 107px;\n  color: #FFFFFF;\n  display: flex;\n  & > svg, & > p {\n    margin-top: auto;\n    padding: 15px;\n    font-weight: 600;\n`;\n\nconst Component = styled(Box)`\n  background: #ededed;\n  height: 85%;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 18px;\n`\n\nconst drawerStyle = {\n    left: 20,\n    top: 17,\n    height: '95%',\n    width: '30%',\n    boxShadow: 'none'\n}\n\nconst InfoDrawer = ({ open, setOpen, profile }) => {\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Drawer\n            open={open}\n            onClose={handleClose}\n            PaperProps={{ sx: drawerStyle }}\n            style={{ zIndex: 1500 }}\n        >\n            <Header>\n                <ArrowBack onClick={() => setOpen(false)} />\n                <Text>Profile</Text>\n            </Header>\n            <Component>\n                {profile && <Profile />}\n            </Component>\n        </Drawer>\n    );\n}\n\nexport default InfoDrawer;","import { useState, useContext } from 'react';\n\nimport { MoreVert } from '@mui/icons-material';\nimport { Menu, MenuItem, styled } from '@mui/material';\n\nimport { googleLogout } from '@react-oauth/google';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { UserContext } from '../../../context/UserProvider';\n\nimport { clientId } from '../../../constants/data';\n\n//components\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst MenuOption = styled(MenuItem)`\n    font-size: 14px\n    padding: 15px 60px 5px 24px;\n    color: #4A4A4A;\n`;\n\nconst Logout = styled(googleLogout)`\n    border: none;\n    box-shadow: none;\n`;\n\nconst HeaderMenu = () => {\n    \n    const [open, setOpen] = useState(false);\n    const [openDrawer, setOpenDrawer] = useState(false);\n    \n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\n    const { setPerson } = useContext(UserContext);\n\n\n    const handleClick = (event) => {\n        setOpen(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setOpen(null);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowlogoutButton(false);\n        setShowloginButton(true);\n        setAccount('');\n        setPerson({});\n    };\n\n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n\n\n    return (\n        <>\n            <MoreVert onClick={handleClick} />\n            <Menu\n                anchorEl={open}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuOption onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuOption>\n                <MenuOption onClick={() => { handleClose(); }}>\n                {/* { showlogoutButton ?\n                    <Logout\n                        clientId={clientId}\n                        buttonText=\"Logout\"\n                        onLogoutSuccess={onSignoutSuccess}\n                    >\n                    </Logout> : null\n                } */}\n                </MenuOption>\n            </Menu>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default HeaderMenu;\n","import { useContext, useState } from 'react';\n\nimport { Box, styled } from '@mui/material';\nimport { Chat as MessageIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport HeaderMenu from './HeaderMenu';\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst Component = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n\nconst Wrapper = styled(Box) `\n    margin-left: auto;\n    & > * {\n        margin-left: 2px;\n        padding: 8px;\n        color: #000;\n    };\n    & :first-child {\n        font-size: 22px;\n        margin-right: 8px;\n        margin-top: 3px;\n    }\n`;\n    \nconst Image = styled('img') ({\n    height: 40,\n    width: 40,\n    borderRadius: '50%'\n})\n\nconst Header = () => {\n    \n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { account } = useContext(AccountContext);\n    \n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <>\n            <Component>\n                <Image src={account.picture} onClick={() => toggleDrawer()} />\n                <Wrapper>\n                    <MessageIcon />\n                    <HeaderMenu/>\n                </Wrapper>\n            </Component>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default Header;","\nimport { Box, InputBase, styled } from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\nconst Component = styled(Box)`\n    background: #fff;\n    height: 45px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid #F2F2F2;\n`;\n\nconst Wrapper = styled(Box)`\n    position: relative;\n    border-radius: 10px;\n    background-color: #f0f2f5;\n    margin: 0 13px;\n    width: 100%;\n`;\n\nconst Icon = styled(Box)`\n    color: #919191;\n    padding: 8px;\n    height: 100%;\n    position: absolute;\n`;\n      \nconst InputField = styled(InputBase) `\n    width: 100%;\n    padding: 16px;\n    padding-left: 65px;\n    font-size: 14px;\n    height: 15px;\n    width: 100%;\n`;\n\nconst Search = ({ setText }) => {\n\n    return (\n        <Component>\n            <Wrapper>\n                <Icon>\n                    <SearchIcon fontSize=\"small\"/>\n                </Icon>\n                <InputField\n                    placeholder=\"Search or start new chat\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </Wrapper>\n        </Component>\n    )\n}\n\nexport default Search;","  \nimport axios from 'axios';\n\nconst url = '';\n\nexport const addUser = async (data) => {\n    try {\n        let response = await axios.post(`${url}/add`, data);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling addUser API ', error);\n    }\n}\n\nexport const getUsers = async () => {\n    try {\n        let response = await axios.get(`${url}/users`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getUsers API ', error);\n    }\n}\n\nexport const setConversation = async (data) => {\n    try {\n        await axios.post(`${url}/conversation/add`, data);\n    } catch (error) {\n        console.log('Error while calling setConversation API ', error);\n    }\n}\n\nexport const getConversation = async (users) => {\n    try {\n        let response = await axios.post(`${url}/conversation/get`, users);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling getConversation API ', error);\n    }\n}\n\nexport const getMessages = async (id) => {\n    try {\n        let response = await axios.get(`${url}/message/get/${id}`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getMessages API ', error);\n    }\n}\n\nexport const newMessages = async (data) => {\n    try {\n        return await axios.post(`${url}/message/add`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}\n\nexport const uploadFile = async (data) => {\n    try {\n        return await axios.post(`${url}/file/upload`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}","\n\nexport const downloadMedia = async (e, originalImage) => {\n    e.preventDefault();\n    try {\n        fetch(originalImage)\n        .then(resp => resp.blob())\n        .then(blob => {\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n\n            const nameSplit = originalImage.split(\"/\");\n            const duplicateName = nameSplit.pop();\n\n            // the filename you want\n            a.download = \"\" + duplicateName + \"\";\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        })\n        .catch((error) => console.log('Error while downloading the image ', error))\n\n    } catch (error) {\n        console.log('Error while downloading the image ', error);\n    }\n}\n\nexport const formatDate = (date) => {\n    const hours = new Date(date).getHours();\n    const minutes = new Date(date).getMinutes();\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n}","import { useContext, useEffect, useState } from 'react';\n\nimport { styled, Box, Typography } from \"@mui/material\";\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { setConversation, getConversation } from '../../../service/api';\nimport { emptyProfilePicture } from '../../../constants/data';\nimport { formatDate } from '../../../utils/common-utils';\n\nconst Component = styled(Box)`\n    height: 45px;\n    display: flex;\n    padding: 13px 0;\n    cursor: pointer;\n`;\n    \nconst Image = styled('img') ({\n    width: 50,\n    height: 50,\n    objectFit: 'cover',\n    borderRadius: '50%',\n    padding: '0 14px'\n});\n\nconst Container = styled(Box)`\n    display: flex;\n`;\n\nconst Timestamp = styled(Typography)`\n    font-size: 12px;\n    margin-left: auto;\n    color: #00000099;\n    margin-right: 20px;\n`;\n\nconst Text = styled(Typography)`\n    display: block;\n    color: rgba(0, 0, 0, 0.6);\n    font-size: 14px;\n`;\n\nconst Conversation = ({ user }) => {\n    const url = user.picture || emptyProfilePicture;\n    \n    const { setPerson } = useContext(UserContext);\n    const { account, newMessageFlag }  = useContext(AccountContext);\n\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        const getConversationMessage = async() => {\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\n        }\n        getConversationMessage();\n    }, [newMessageFlag]);\n\n    const getUser = async () => {\n        setPerson(user);\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\n    }\n\n    return (\n        <Component onClick={() => getUser()}>\n            <Box>\n                <Image src={url} alt=\"display picture\" />\n            </Box>\n            <Box style={{width: '100%'}}>\n                <Container>\n                    <Typography>{user.name}</Typography>\n                    { \n                        message?.text && \n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \n                    }\n                </Container>\n                <Box>\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\n                </Box>\n            </Box>\n        </Component>\n    )\n}\n\nexport default Conversation;","export const clientId = '1051426514050-dv0o9fu9umand32ov9iqcamvuf9gttta.apps.googleusercontent.com'\n\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';","import { useState, useEffect, useContext } from 'react';\n\nimport { Box, styled, Divider } from '@mui/material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Conversation from './Conversation';\nimport { getUsers } from '../../../service/api';\n\nconst Component = styled(Box)`\n    overflow: overlay;\n    height: 81vh;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 0 0 0 70px;\n    background-color: #e9edef;\n    opacity: .6;\n`;\n\nconst Conversations = ({ text }) => {\n    const [users, setUsers] = useState([]);\n    \n    const { account, socket, setActiveUsers } = useContext(AccountContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await getUsers();\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n            setUsers(fiteredData);\n        }\n        fetchData();\n    }, [text]);\n\n    useEffect(() => {\n        socket.current.emit('addUser', account);\n        socket.current.on(\"getUsers\", users => {\n            setActiveUsers(users);\n        })\n    }, [account])\n\n    return (\n        <Component>\n            {\n                users && users.map((user, index) => (\n                    user.sub !== account.sub && \n                        <>\n                            <Conversation user={user} />\n                            {\n                                users.length !== (index + 1)  && <StyledDivider />\n                            }\n                        </>\n                ))\n            }\n        </Component>\n    )\n}\n\nexport default Conversations;","import { useState } from 'react';\n\nimport { Box } from '@mui/material';\n\n//components\nimport Header from './Header';\nimport Search from './Search';\nimport Conversations from './Conversations';\n\nconst Menu = () => {\n    const [text, setText] = useState('');\n    \n    return (\n        <Box>\n            <Header/>\n            <Search setText={setText} />\n            <Conversations text={text} />\n        </Box>\n    )\n}\n\nexport default Menu;","import { useContext } from 'react';\n\nimport { Box, Typography, styled } from '@mui/material';\nimport { Search, MoreVert } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { defaultProfilePicture } from '../../../constants/data';\n\nconst Header = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n    \nconst Image = styled('img')({\n    width: 40,\n    height: 40,\n    objectFit: 'cover',\n    borderRadius: '50%'\n})\n\nconst Name = styled(Typography)`\n    margin-left: 12px !important;\n`;\n\nconst RightContainer = styled(Box)`\n    margin-left: auto;\n    & > svg {\n        padding: 8px;\n        font-size: 22px;\n        color: #000;\n    }\n`;\n\nconst Status = styled(Typography)`\n    font-size: 12px !important;\n    color: rgb(0, 0, 0, 0.6);\n    margin-left: 12px !important;\n`;\n\nconst ChatHeader = ({ person }) => {  \n\n    const url = person.picture || defaultProfilePicture;\n    \n    const { activeUsers } = useContext(AccountContext);\n\n    return (\n        <Header>\n            <Image src={url} alt=\"display picture\" />     \n            <Box>\n                <Name>{person.name}</Name>\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : 'Offline'}</Status>    \n            </Box>   \n            <RightContainer>\n                <Search />\n                <MoreVert />    \n            </RightContainer> \n        </Header>\n    )\n}\n\nexport default ChatHeader;","import { useContext } from 'react';\n\nimport { Box, styled, Typography } from '@mui/material';\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { downloadMedia, formatDate } from '../../../utils/common-utils';\nimport { iconPDF } from '../../../constants/data';\n\nconst Wrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n    \nconst Own = styled(Box)`\n    background: #dcf8c6;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    margin-left: auto;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 14px;\n    padding: 0 25px 0 5px;\n`;\n\nconst Time = styled(Typography)`\n    font-size: 10px;\n    color: #919191;\n    margin-top: 6px;\n    word-break: keep-all;\n    margin-top: auto;\n`;\n\nconst Message = ({ message }) => {\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n        {\n            account.sub === message.senderId ? \n                <Own>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Own>\n            : \n                <Wrapper>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Wrapper>\n        }\n        \n        </>\n    )\n}\n\nconst TextMessage = ({ message }) => {\n    \n    return (\n        <>\n            <Text>{message.text}</Text>\n            <Time>{formatDate(message.createdAt)}</Time>\n        </>\n    )\n}\n\nconst ImageMessage = ({ message }) => {\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {\n                message?.text?.includes('.pdf') ?\n                    <div style={{ display: 'flex' }}>\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\n                    </div>\n                : \n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\n            }\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\n                <GetAppIcon \n                    onClick={(e) => downloadMedia(e, message.text)} \n                    fontSize='small' \n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \n                />\n                {formatDate(message.createdAt)}\n            </Time>\n        </div>\n    )\n}\n\n\nexport default Message;","import { useEffect } from 'react';\n\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\nimport { Box, styled, InputBase } from '@mui/material';\n\nimport { uploadFile } from '../../../service/api';\n\nconst Container = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 15px;\n    &  > * {\n        margin: 5px;\n        color: #919191;\n    }\n`;\n\nconst Search = styled(Box)`\n    border-radius: 18px;\n    background-color: #FFFFFF;\n    width: calc(94% - 100px);\n`;\n\nconst InputField = styled(InputBase)`\n    width: 100%;\n    padding: 20px;\n    padding-left: 25px;\n    font-size: 14px;\n    height: 20px;\n    width: 100%;\n`;\n\nconst ClipIcon = styled(AttachFile)`\n    transform: 'rotate(40deg)'\n`;\n\n\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\n\n    useEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n\n                const response = await uploadFile(data);\n                setImage(response.data);\n            }\n        }\n        getImage();\n    }, [file])\n\n    const onFileChange = (e) => {\n        setValue(e.target.files[0].name);\n        setFile(e.target.files[0]);\n    }\n\n    return (\n        <Container>\n            <EmojiEmotions />\n            <label htmlFor=\"fileInput\">\n                <ClipIcon />\n            </label>\n            <input\n                type='file'\n                id=\"fileInput\"\n                style={{ display: 'none' }}\n                onChange={(e) => onFileChange(e)}\n            />\n\n            <Search>\n                <InputField\n                    placeholder=\"Type a message\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={(e) => sendText(e)}\n                    value={value}\n                />\n            </Search>\n            <Mic />\n        </Container>\n    )\n}\n\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\nimport { Box, styled } from '@mui/material';\n\nimport { io } from 'socket.io-client';\n\nimport { getMessages, newMessages } from '../../../service/api';\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Message from './Message';\nimport Footer from './Footer';\n\nconst Wrapper = styled(Box)`\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\n    background-size: 50%;\n`;\n\nconst StyledFooter = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    // position: absolute;\n    width: 100%;\n    // bottom: 0\n`;\n    \nconst Component = styled(Box)`\n    height: 80vh;\n    overflow-y: scroll;\n`;\n\nconst Container = styled(Box)`\n    padding: 1px 80px;\n`;\n\n\n\nconst Messages = ({ person, conversation }) => {\n\n    const [messages, setMessages] = useState([]);\n    const [incomingMessage, setIncomingMessage] = useState(null);\n    const [value, setValue] = useState();\n    const [file, setFile] = useState();\n    const [image, setImage] = useState();\n\n    const scrollRef = useRef();\n\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\n\n    useEffect(() => {\n        socket.current.on('getMessage', data => {\n            setIncomingMessage({\n                ...data,\n                createdAt: Date.now()\n            })\n        })\n    }, []);\n    \n    useEffect(() => {\n        const getMessageDetails = async () => {\n            let data = await getMessages(conversation?._id);\n            setMessages(data);\n        }\n        getMessageDetails();\n    }, [conversation?._id, person._id, newMessageFlag]);\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\n    }, [messages]);\n\n    useEffect(() => {\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \n            setMessages((prev) => [...prev, incomingMessage]);\n        \n    }, [incomingMessage, conversation]);\n\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\n    \n    const sendText = async (e) => {\n        let code = e.keyCode || e.which;\n        if(!value) return;\n\n        if(code === 13) { \n            let message = {};\n            if (!file) {\n                message = {\n                    senderId: account.sub,\n                    receiverId: receiverId,\n                    conversationId: conversation._id,\n                    type: 'text',\n                    text: value\n                };\n            } else {\n                message = {\n                    senderId: account.sub,\n                    conversationId: conversation._id,\n                    receiverId: receiverId,\n                    type: 'file',\n                    text: image\n                };\n            }\n\n            socket.current.emit('sendMessage', message);\n\n            await newMessages(message);\n\n            setValue('');\n            setFile();\n            setImage('');\n            setNewMessageFlag(prev => !prev);\n        } \n    }\n\n    return (\n        <Wrapper>\n            <Component>\n                {\n                    messages && messages.map(message => (\n                        <Container ref={scrollRef}>\n                            <Message message={message} />\n                        </Container>\n                    ))\n                }\n            </Component>\n            <Footer \n                sendText={sendText} \n                value={value} \n                setValue={setValue} \n                setFile={setFile} \n                file={file} \n                setImage={setImage}\n            />\n        </Wrapper>\n    )\n}\n\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { getConversation } from '../../../service/api';\n\n//components\nimport ChatHeader from './ChatHeader';\nimport Messages from './Messages';\n\nconst ChatBox = () => {\n    const { person } = useContext(UserContext);\n    const { account } = useContext(AccountContext);\n\n    const [conversation, setConversation] = useState({});\n    \n    useEffect(() => {\n        const getConversationDetails = async () => {\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\n            setConversation(data);\n        }\n        getConversationDetails();\n    }, [person.sub]);\n\n    return (\n        <Box style={{height: '75%'}}>\n            <ChatHeader person={person} />\n            <Messages person={person} conversation={conversation} />\n        </Box>\n    )\n}\n\nexport default ChatBox;","\nimport { Box, styled, Typography, Divider } from '@mui/material';\n\nimport { emptyChatImage } from '../../../constants/data';\n\nconst Component = styled(Box)`\n    background: #f8f9fa;\n    padding: 30px 0;\n    text-align: center;\n    height: 100%;\n`;\n\nconst Container = styled(Box)`\n    padding: 0 200px;\n`;\n    \nconst Image = styled('img')({\n    marginTop: 100,\n    width: 400\n})\n   \nconst Title = styled(Typography)`\n    font-size: 32px;\n    font-family: inherit;\n    font-weight: 300;\n    color: #41525d;\n    margin-top: 25px 0 10px 0;\n`;\n\nconst SubTitle = styled(Typography)`\n    font-size: 14px;\n    color: #667781;\n    font-weight: 400;\n    font-family: inherit;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 40px 0;\n    opacity: 0.4;\n`;\n\nconst EmptyChat = () => {\n    \n    return (\n        <Component>\n            <Container>\n                <Image src={emptyChatImage} alt=\"empty\" />\n                <Title>WhatsApp Web</Title>\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\n                <SubTitle>Use WhatsApp on up to 4 linked devices and 1 phone at the same time. </SubTitle>\n                <StyledDivider />\n            </Container>\n        </Component>\n    )\n}\n\nexport default EmptyChat;","import { useContext } from 'react';\nimport { Dialog, styled, Box } from '@mui/material';\n\nimport { UserContext } from '../../context/UserProvider';\n\n//components\nimport Menu from './menu/Menu';\nimport ChatBox from './chat/ChatBox';\nimport EmptyChat from './chat/EmptyChat';\n\nconst Component = styled(Box)`\n    display: flex;\n`;\n    \nconst LeftComponent = styled(Box)`\n    min-width: 450px;\n`;\n    \nconst RightComponent = styled(Box)`\n    width: 73%;\n    min-width: 300px;\n    height: 100%;\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\n`;\n\nconst dialogStyle = {\n    height: '95%',\n    width: '100%',\n    margin: '20px',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    borderRadius: 0,\n    boxShadow: 'none',\n    overflow: 'hidden'\n};\n\nconst ChatDialog = () => {\n\n    const { person } = useContext(UserContext);\n    \n    return (\n        <Dialog \n            open={true} \n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n            PaperProps={{ sx: dialogStyle }}\n            maxWidth={'md'}\n        >\n            <Component>\n                <LeftComponent>\n                    <Menu/>\n                </LeftComponent>\n                <RightComponent>\n                    {\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\n                    }\n                </RightComponent>\n            </Component>\n        </Dialog>\n    )\n}\n\nexport default ChatDialog;","import { useContext } from 'react';\n\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\n\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\n\nimport { addUser } from '../../service/api';\nimport { AccountContext } from '../../context/AccountProvider';\nimport { qrCodeImage } from '../../constants/data';\n\nconst Component = styled(Box)`\n    display: flex; \n`;\n\nconst Container = styled(Box)`\n    padding: 56px 0 56px 56px;\n`;\n\nconst QRCOde = styled('img')({\n    margin: '50px 0 0 50px',\n    height: 264,\n    width: 264\n});\n\nconst Title = styled(Typography)`\n    font-size: 26px;\n    margin-bottom: 25px;\n    color: #525252;\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\n    font-weight: 300;\n`;\n\nconst StyledList = styled(List)`\n    &  > li {\n        padding: 0;\n        margin-top: 15px;\n        font-size: 18px;\n        line-height: 28px;\n        color: #4a4a4a;\n    }\n`;\n\nconst dialogStyle = {\n    marginTop: '12%',\n    height: '95%',\n    width: '60%',\n    maxWidth: '100',\n    maxHeight: '100%',\n    borderRadius: 0,\n    boxShadow: 'none',\n    overflow: 'hidden'\n}\n\nconst LoginDialog = () => {\n\n    const { setAccount,showloginButton, setShowloginButton, setShowlogoutButton } = useContext(AccountContext);\n\n    const onLoginSuccess = async (res) => {\n        let decoded = jwt_decode(res.credential);\n        setAccount(decoded);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        await addUser(decoded);\n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    // const onSignoutSuccess = () => {\n    //     alert(\"You have been logged out successfully\");\n    //     console.clear();\n    //     setShowloginButton(true);\n    //     setShowlogoutButton(false);\n    // };\n\n    return (\n        <Dialog\n            open={true}\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n            maxWidth={'md'}\n            PaperProps={{ sx: dialogStyle }}\n        >\n            <Component>\n                <Container>\n                    <Title>To use WhatsApp on your computer:</Title>\n                    <StyledList>\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\n                    </StyledList>\n                </Container>\n                <Box style={{position:'relative'}}>\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\n                        { showloginButton ?\n                            <GoogleLogin\n                                buttonText=\"\"\n                                onSuccess={onLoginSuccess}\n                                onError={onLoginFailure}\n                            /> : null}\n                    </Box>\n                </Box>\n            </Component>\n        </Dialog>\n    )\n}\n\nexport default LoginDialog;","import { useContext } from 'react';\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\n\nimport { AccountContext } from '../context/AccountProvider';\n\n//components\nimport ChatDialog from './chat/ChatDialog';\nimport LoginDialog from './account/LoginDialog';\n\nconst Component = styled(Box)`\n    height: 100vh;\n    background: #DCDCDC;\n`;\n\nconst Header = styled(AppBar)`\n    background-color: #00A884;\n    height: 125px;\n    box-shadow: none;\n`;\n    \nconst LoginHeader = styled(AppBar)`\n    background: #00bfa5;\n    height: 200px;\n    box-shadow: none;\n`;\n\nconst Messenger = () => {\n    const { account } = useContext(AccountContext);\n    \n    return (\n        <Component>\n            {\n                account ? \n                <>\n                    <Header>\n                        <Toolbar></Toolbar>\n                    </Header>\n                    <ChatDialog />\n                </>\n                :\n                <>\n                    <LoginHeader>\n                        <Toolbar></Toolbar>\n                    </LoginHeader>\n                    <LoginDialog />\n                </>\n            }\n        </Component>\n    )\n}\n\nexport default Messenger;"],"sourceRoot":""}